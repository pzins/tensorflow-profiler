<?xml version="1.0" encoding="UTF-8"?>
<tmfxml xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="xmlDefinition.xsd">


	<pattern version="0" id="grpc_latencies_pattern">
		<head>
			<traceType id="org.eclipse.linuxtools.lttng2.ust.tracetype" />
			<traceType id="org.eclipse.linuxtools.tmf.core.experiment.generic" />
			<label value="GRPC stats" />
		</head>
		
		<storedField id="name"/>
		<storedField id="rendezvous_key" alias="rdv"/>

		<patternHandler initial="grpc_call">			
			<test id="grpctest">
				<if>
					<condition>
						<stateValue type="eventField" value="rendezvous_key"/>
						<stateValue type="query">
							<stateAttribute type="constant" value="#CurrentScenario" />
							<stateAttribute type="constant" value="rendezvous_key" />
						</stateValue>
					</condition>
				</if>
			</test>
			
			<!-- 	Generates three state changes in the state system -->
		<action id="send_founded">
<!-- 		Save the name of the system call executed under the current scenario path-->
			<stateChange>
				<stateAttribute type="constant" value="#CurrentScenario" />
				<stateAttribute type="constant" value="rendezvous_key" />
				<stateValue type="eventField" value="rendezvous_key" />
				<!-- <stateValue type="eventName"/> -->
			</stateChange>
		</action>
		
			<!-- 	Generate a pattern segment -->
		<action id="receive_founded">
<!-- 		Generate a pattern segment with the name of the system call  of the current scenario-->
			<segment>
				<segType>
					<segName>
						<stateValue type="query">
							<stateAttribute type="constant" value="#CurrentScenario" />
							<stateAttribute type="constant" value="rendezvous_key" />
							<stateAttribute type="eventField" value="rendezvous_key" />
						</stateValue>
					</segName>
				</segType>
			</segment>
		</action>
		
		
		
		<!-- 	System call FSM -->
		<fsm id="grpc_call" initial="wait_grpc_call_entry_x">
<!-- 		Validate that PID == 1311 before going to the initial state -->
			<initial>
				<transition target="wait_grpc_call_entry_x" />
			</initial>
			<state id="wait_grpc_call_entry_x">
<!-- 				The state will stay here until we have a "syscall_entry_*" event -->
				<transition event="grpcTracer:send_*request" target="grpc_call_entry_x" action="send_founded" saveStoredFields="true"/>
			</state>
			<state id="grpc_call_entry_x" >
<!-- 				The state will stay here until we have a "syscall_exit_*" event -->
				<transition event="grpcTracer:receive_*request" cond="grpctest" target="grpc_call_exit_x" action="receive_founded" saveStoredFields="true" clearStoredFields="true"/>
			</state>
<!-- 				The state will stay here forever -->
			<final id="grpc_call_exit_x"/>
		</fsm>
		</patternHandler>

	</pattern>

</tmfxml>
